<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aiops.api.mapper.TraceMapper">

    <select id="queryTraces" resultType="com.aiops.api.entity.vo.response.TracePoint"
            parameterType="com.aiops.api.service.trace.dto.TraceSearchDto">
        SELECT
        CASE
        WHEN (UNIX_TIMESTAMP(MAX(s.`end_time`))-UNIX_TIMESTAMP( MIN(s.`start_time`))) <![CDATA[ < ]]> 0 THEN 0
        ELSE (UNIX_TIMESTAMP(MAX(s.`end_time`))-UNIX_TIMESTAMP( MIN(s.`start_time`))) END AS `duration`,
        UNIX_TIMESTAMP(MIN(s.`start_time`)) AS `start`, s.`is_error`, t.`trace_id` AS `id`, GROUP_CONCAT(DISTINCT
        e.`name`) AS
        `endpointNames`
        FROM trace_trace t
        JOIN trace_span s
        ON t.`trace_id` = s.`trace_id`
        JOIN metadata_service_endpoint e
        ON e.`service_endpoint_id` = s.`endpoint_id`
        WHERE s.`trace_id` IN(
        SELECT DISTINCT trace_id FROM trace_span ts
        <where>
            <if test="serviceId">
                and ts.`service_id` = #{serviceId}
            </if>
            <if test="serviceInstanceId">
                and ts.`instance_id` = #{serviceInstanceId}
            </if>
            <if test="endpointId">
                and ts.`endpoint_id` = #{endpointId}
            </if>
            <if test="from">
                and ts.`start_time` <![CDATA[ >= ]]> #{from}
            </if>
            <if test="to">
                and ts.`end_time` <![CDATA[ <= ]]> #{to}
            </if>
            <if test='traceState=="ERROR"'>
                and ts.`is_error` = true
            </if>
        </where>
        )
        GROUP BY t.`trace_id`
        <trim prefix="HAVING" suffixOverrides="AND">
            <if test="minTraceDuration">
                `duration` <![CDATA[ >= ]]> #{minTraceDuration}
            </if>
            <if test="maxTraceDuration">
                `duration` <![CDATA[ <= ]]> #{maxTraceDuration}
            </if>
            <if test='traceState=="SUCCESS"'>
                sum(s.`is_error`)=0
            </if>
        </trim>
        ORDER BY
        <choose>
            <when test='queryOrder=="BY_START_TIME"'>
                `start` DESC
            </when>
            <otherwise>
                `duration` DESC
            </otherwise>
        </choose>
    </select>

    <resultMap id="span" type="com.aiops.api.entity.vo.response.TraceSpan">
        <id column="spanId" property="spanId"/>
        <result column="traceId" property="traceId"/>
        <result column="segmentId" property="segmentId"/>
        <result column="parentSpanId" property="parentSpanId"/>
        <result column="serviceCode" property="serviceCode"/>
        <result column="startTime" property="startTime"/>
        <result column="endTime" property="endTime"/>
        <result column="endpointName" property="endpointName"/>
        <result column="type" property="type"/>
        <result column="peer" property="peer"/>
        <result column="component" property="component"/>
        <result column="isError" property="isError"/>
        <result column="layer" property="layer"/>
        <collection property="refs" ofType="com.aiops.api.entity.vo.response.TraceSpanRef">
            <result column="ref_traceId" property="traceId"/>
            <result column="ref_parentSegmentId" property="parentSegmentId"/>
            <result column="ref_parentSpanId" property="parentSpanId"/>
            <result column="ref_type" property="type"/>
        </collection>
        <collection property="tags" ofType="com.aiops.api.entity.vo.response.KeyValue">
            <result column="tag_key" property="key"/>
            <result column="tag_value" property="value"/>
        </collection>
        <collection property="logs" ofType="com.aiops.api.entity.vo.response.TraceSpanLog">
            <result column="log_time" property="time"/>
            <result column="log_data" property="data"/>
        </collection>
    </resultMap>

    <select id="querySpans" resultMap="span">
        SELECT s.`trace_id` AS `traceId`, s.`segment_id` AS `segmentId`
        , s.`id` AS `spanId`, s.`parent_span_id` AS `parentSpanId`, s.`service_code` AS `serviceCode`
        , UNIX_TIMESTAMP(s.`start_time`)*1000 AS `startTime`, UNIX_TIMESTAMP(s.`end_time`)*1000 AS `endTime`
        , e.`name` AS `endpointName`, s.`type` AS `type`, s.`peer` AS `peer`, s.`component` AS `component`
        , s.`is_error` AS `isError`, s.`layer` AS `layer`
        , kv.`key` AS `tag_key`, kv.`value` AS `tag_value`
        , r.`parent_segment_id` AS `ref_parentSegmentId`, r.`parent_span_id` AS `ref_parentSpanId`, r.`ref_type` AS `ref_type`, s.`trace_id` AS `ref_traceId`
        , UNIX_TIMESTAMP(l.`time`)*1000 AS `log_time`, ld.`data` AS `log_data`
        FROM trace_span s
        LEFT JOIN metadata_service_endpoint e ON s.`endpoint_id`=e.`service_endpoint_id`
        LEFT JOIN trace_span_tags t ON s.`id`=t.`span_id`
        LEFT JOIN trace_key_value kv ON t.`key_value_id`=kv.`key_value_id`
        LEFT JOIN trace_span_refs sr ON s.`id`=sr.`span_id`
        LEFT JOIN trace_ref r ON sr.`ref_id`=r.`ref_id`
        LEFT JOIN trace_log_entity l ON s.`id`=l.`span_id`
        LEFT JOIN trace_log_entity_data ld ON l.`log_entity_id`=ld.`log_entity_id`
        WHERE s.`trace_id` = #{traceId}
    </select>
</mapper>